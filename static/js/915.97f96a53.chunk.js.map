{"version":3,"file":"static/js/915.97f96a53.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import { Button, TextField, Container, Typography, Box } from '@mui/material';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { userPost } from 'store/operations';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const nameId = nanoid();\n  const emailId = nanoid();\n  const passwordId = nanoid();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    const user = {\n      name: form.elements.name.value,\n      email: form.elements.email.value,\n      password: form.elements.password.value,\n    };\n\n    dispatch(userPost(user));\n    form.reset();\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Registration\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id={nameId}\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id={emailId}\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id={passwordId}\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Register\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/RegisterForm\";\n\nconst Register = () => {\n\n    return (\n        <RegisterForm />\n\n    )\n}\n\nexport default Register;\n\n","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["RegisterForm","dispatch","useDispatch","nameId","nanoid","emailId","passwordId","_jsx","Container","maxWidth","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","Typography","component","variant","onSubmit","event","preventDefault","form","currentTarget","user","name","elements","value","email","password","userPost","reset","noValidate","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","pattern","title","type","Button","mb","Register","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","React","ref","className","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}